{
  "id" : "hoe",
  "realm" : "hoe",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "55091e2e-b70f-4919-839c-1b660abea732",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "hoe",
      "attributes" : { }
    }, {
      "id" : "471ba87b-c9e2-4202-b073-36365d52020a",
      "name" : "user",
      "description" : "user hoe",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "hoe",
      "attributes" : { }
    }, {
      "id" : "64e89138-6359-4987-9651-1ec7984e4ce1",
      "name" : "default-roles-hoe",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "manage-account", "view-profile" ]
        }
      },
      "clientRole" : false,
      "containerId" : "hoe",
      "attributes" : { }
    }, {
      "id" : "30a1e85f-89b0-4632-b2be-23824774c2bd",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "hoe",
      "attributes" : { }
    } ],
    "client" : {
      "bards" : [ ],
      "realm-management" : [ {
        "id" : "d9fb90b8-f48b-4390-b100-94b2d3da366e",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      }, {
        "id" : "13553d07-0185-404c-acc7-27d4850c0178",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "view-identity-providers", "manage-users", "view-authorization", "view-users", "create-client", "view-clients", "query-clients", "view-events", "manage-realm", "manage-authorization", "manage-identity-providers", "manage-events", "query-groups", "query-realms", "query-users", "impersonation", "view-realm", "manage-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      }, {
        "id" : "6fa0a61d-91f6-4591-ac98-05e22a7a8ede",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      }, {
        "id" : "24fb13ca-657d-4970-8447-5d4d129753c8",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      }, {
        "id" : "d77a7bd0-6b40-4ede-b4fc-316c0f19f23a",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      }, {
        "id" : "1d54a63a-fbbb-44c7-9b18-9ef0ea329dd1",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      }, {
        "id" : "15e54cb2-1c20-4f7c-95c1-b6b541ecc326",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      }, {
        "id" : "7ccd2a68-2b65-448c-8de8-f9c6a9d4ae6a",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      }, {
        "id" : "2f884487-3b1f-4698-9f43-86e284dad6d2",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      }, {
        "id" : "685bada7-831f-4507-81ab-5ab73078c8e2",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      }, {
        "id" : "94601306-1d01-4715-9af5-cd12af4eed7e",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      }, {
        "id" : "8e93688b-6e54-4ad2-a73c-26c7306cb15e",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      }, {
        "id" : "cc352e11-ef71-4ae8-8f14-85c396cbebad",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      }, {
        "id" : "8a71d394-c31e-4f50-b8ae-de586957dc53",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      }, {
        "id" : "9cf75183-6271-4643-bd4e-81f28f335ef2",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      }, {
        "id" : "fec49d32-c103-473b-9be1-0ce174a857cd",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      }, {
        "id" : "278bff07-e4dd-4829-82c9-cad2dd121c80",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      }, {
        "id" : "67a9b0fb-f8e2-490e-9318-416c63db9e21",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      }, {
        "id" : "9e419780-5af8-4ccf-b23e-0744a15f2dd5",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "be73c417-6744-4d2c-9743-d2319cae6e01",
        "attributes" : { }
      } ],
      "heroes" : [ ],
      "bardcontest" : [ ],
      "species" : [ ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "empire" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "c4f1a43a-e385-444c-b05e-b33de96f20b9",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fb41279c-0f5f-4f7d-9e15-93282b274037",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "c8731062-2eb2-42c5-b860-e0c3930a297d",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d6256d1c-bed9-49d8-9d1a-9fc9ac8c60a3",
        "attributes" : { }
      }, {
        "id" : "2626b704-b70f-4ad0-a0d6-1bbbc60cfedd",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d6256d1c-bed9-49d8-9d1a-9fc9ac8c60a3",
        "attributes" : { }
      }, {
        "id" : "6ac38cc2-8319-45c9-953d-f4f79782b114",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d6256d1c-bed9-49d8-9d1a-9fc9ac8c60a3",
        "attributes" : { }
      }, {
        "id" : "d972c5b0-4283-40db-a6b4-a6257ac93c96",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "d6256d1c-bed9-49d8-9d1a-9fc9ac8c60a3",
        "attributes" : { }
      }, {
        "id" : "80112bcd-a2b6-4ef5-abeb-57e5cecb7526",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d6256d1c-bed9-49d8-9d1a-9fc9ac8c60a3",
        "attributes" : { }
      }, {
        "id" : "360bc6bd-3b36-4df3-9103-f49d6cc7e275",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "d6256d1c-bed9-49d8-9d1a-9fc9ac8c60a3",
        "attributes" : { }
      }, {
        "id" : "4800ed8d-e3cf-413a-9936-01131e66223a",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d6256d1c-bed9-49d8-9d1a-9fc9ac8c60a3",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "64e89138-6359-4987-9651-1ec7984e4ce1",
    "name" : "default-roles-hoe",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "hoe"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "scopeMappings" : [ {
    "client" : "bards",
    "roles" : [ "default-roles-hoe", "user" ]
  }, {
    "client" : "empire",
    "roles" : [ "default-roles-hoe", "user" ]
  }, {
    "client" : "heroes",
    "roles" : [ "default-roles-hoe", "user" ]
  }, {
    "client" : "species",
    "roles" : [ "default-roles-hoe", "user" ]
  }, {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account" ]
    } ]
  },
  "clients" : [ {
    "id" : "d6256d1c-bed9-49d8-9d1a-9fc9ac8c60a3",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/hoe/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/hoe/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "0d50e96a-76b7-450f-9718-5fafb29aefd9",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/hoe/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/hoe/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "5f78103f-3d26-4839-ab18-067b5f52777f",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "5703a27a-4ee7-4508-beaa-a55130aedcf9",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "685ac756-8c7e-4be4-87bc-885bfcbbb458",
    "clientId" : "bardcontest",
    "rootUrl" : "http://localhost:8094/bardcontest",
    "adminUrl" : "http://localhost:8094/bardcontest",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:8094/bardcontest/*" ],
    "webOrigins" : [ "http://localhost:8094" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : true,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "frontchannel.logout.session.required" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "saml.allow.ecp.flow" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "saml.encrypt" : "false",
      "login_theme" : "keycloak",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "acr.loa.map" : "{}",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "c39da531-90dc-483f-b5c9-45f973e1b7bc",
    "clientId" : "bards",
    "rootUrl" : "http://localhost:8093/bards",
    "adminUrl" : "http://localhost:8093/bards",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:8093/bards/*" ],
    "webOrigins" : [ "http://localhost:8093" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : true,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "frontchannel.logout.session.required" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "saml.allow.ecp.flow" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "saml.encrypt" : "false",
      "login_theme" : "keycloak",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "acr.loa.map" : "{}",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "fb41279c-0f5f-4f7d-9e15-93282b274037",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "23df49a3-491e-4203-97d9-19b47c9bee2e",
    "clientId" : "empire",
    "rootUrl" : "http://localhost:8092/empire",
    "adminUrl" : "http://localhost:8092/empire",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:8092/empire/*" ],
    "webOrigins" : [ "http://localhost:8092" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : true,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "frontchannel.logout.session.required" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "saml.allow.ecp.flow" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "saml.encrypt" : "false",
      "login_theme" : "keycloak",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "acr.loa.map" : "{}",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "b3b1c387-1abe-4b5a-88a3-d01f3fa68cc2",
    "clientId" : "heroes",
    "rootUrl" : "http://localhost:8091/heroes",
    "adminUrl" : "http://localhost:8091/heroes",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:8091/heroes/*" ],
    "webOrigins" : [ "http://localhost:8091" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : true,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "frontchannel.logout.session.required" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "saml.allow.ecp.flow" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "saml.encrypt" : "false",
      "login_theme" : "keycloak",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "acr.loa.map" : "{}",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "be73c417-6744-4d2c-9743-d2319cae6e01",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "afdb1c58-c0be-4b66-9615-373dbe603c02",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/hoe/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/hoe/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "2c87f4d5-5f4f-4dbc-bf72-9fcd84c93a9d",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "5e2594a3-1eb2-4c3f-8cde-2ba4aa7fcdbb",
    "clientId" : "species",
    "rootUrl" : "http://localhost:8090/species",
    "adminUrl" : "http://localhost:8090/sepcies",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:8090/species/*" ],
    "webOrigins" : [ "http://localhost:8090" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : true,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "frontchannel.logout.session.required" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "saml.allow.ecp.flow" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "saml.encrypt" : "false",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "acr.loa.map" : "{}",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "token.response.type.bearer.lower-case" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "1e308138-11d7-4609-beb5-03a4f9529af1",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "45711859-93af-4e53-b73e-88586937601e",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "2d412d0c-4f2c-4076-b5fe-bda8b5d83671",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "9190d9f2-385e-420a-a549-b8ba8c422b46",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "13e8bbfe-5624-4ffc-a2a3-10647f978984",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "a67b6d44-f0db-42d6-b56e-23f06ea79aa7",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "623ddabb-9f4d-4beb-a9ee-a2c32a1db7e9",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "010869b0-3f0b-4412-a3b3-a19b59d9bb52",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "f15fa6d4-bf14-453f-b9e5-f423ea4be05a",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "e49a374c-846f-41bd-99b3-fcaacd9eabb2",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "132d722f-169b-45cb-86cc-e0af0ca1ab38",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "05c68807-bf81-47db-ad99-122035d137d6",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "369f7143-4a82-40e1-a360-dcb700353dc3",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "18cfcd1b-4347-4280-89f2-ea25c0e05169",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "eb3c0175-fcf5-4c46-afc4-d9b86ff61092",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "f40e5440-3f20-4a1f-829b-da2e168f91d2",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "51a52520-47dd-4b6e-b362-57667ef3c96a",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    }, {
      "id" : "c7e361cf-c854-4d6a-9b88-e0d43e38e058",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "5f338356-09bf-43b5-ade9-48d00c47c13a",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "0e7b8395-6179-4e88-aecc-63a87b1ca4a2",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "1f327bb6-a0d3-4123-9bdb-a6eab568fb5f",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "151cc57c-9cce-4505-be7c-26db18e09452",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "715dec98-f410-4024-baf7-f3275464efb4",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "658699a5-e70b-4324-b37f-3508c5cbc795",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "716be7ec-8e55-4eb8-b17d-0de9462bd410",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "aa925ee9-919d-4230-ab71-2f9f3f9dcf6e",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "21fe3772-638d-4ce3-95fd-e6b9f2aae377",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9dab38d4-db52-47dd-b3f6-dd017de9f0b8",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9e765231-6b85-45be-bf19-878fd344ad8c",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "96753fdc-5641-465f-8dd3-84764da3b17c",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "cb9a0c01-0fa9-4960-88da-0758a081bd75",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d81ee9b5-d2d7-4879-9d28-39d37e8fb737",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4ca2445e-28c6-4eeb-8b68-2b48d397d43e",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "74b20db4-0122-4284-9480-553b21cf18b4",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d8738221-9b92-4a9a-949d-f20a43ca0d3d",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    } ]
  }, {
    "id" : "e84346f6-da82-4cb3-be54-2ab0c42964aa",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "0a8b2f45-7591-4bd8-a770-d92b8125b903",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "cdb80f9e-6d77-4149-8ab4-b0c62cfbcdec",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "01df89ae-9110-4adb-b34e-75e9d3df2e53",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "a928142d-6381-489a-a2ca-a541393d8414",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "b631db9f-8f9a-49e1-ba9f-78c280d2f7af",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "a936908f-959a-4e62-bb97-8ec49cb2156e",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "28073bd9-a823-4e15-98c5-8fb53611448f",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-attribute-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "oidc-usermodel-property-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "oidc-full-name-mapper", "oidc-address-mapper" ]
      }
    }, {
      "id" : "910b6dbc-0efb-4f10-816e-ddf7ffaf7b4d",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-property-mapper", "oidc-full-name-mapper", "oidc-address-mapper", "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper", "oidc-usermodel-attribute-mapper" ]
      }
    }, {
      "id" : "b3234be1-138f-4552-a624-02c82627a412",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "0a1c7fa6-6172-42b7-a7ac-389166213299",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAr9S/L1mKJaG+bZBNdrpdcycVhsFZj5BNyNTQU6CdtHc3kMp6WpuP1GV/s+94oOl4OBK38hzB83QZpzvj3BJj7Uc5dgK6OsNCz5Za3zGJ5SuoxiNBN1PvEelfYAlsAWTIw1jnvhkd2p5+4voWe3NT29T/HiZ0gMURweHRGxlxdC9ej5CuSEAai6DPy8m+SI6N73fFf3vd+ky62aDL4C3VXvpVIR4riOaUAvjadNCrjXM/cB+/3xAQj1BtR65uZYC7XmrKSUNrz0xi8UbTYtdG/qavZVn5bL3jwc6FQQA9oc/Rrev7oLtWEt+aslT7sncMPg1uQ6jVWpckk+shwzM3GwIDAQABAoIBADIAcSH495U+CtZDfBPwaZTOn4uDvoFaCxS6mEe/3Dku0ell+yd7J4rCFm/IAOjZm+tuP0slrG4cLRNmr6Sswif+4jNSET2Wu5Am9M6V2t4F7WfzLJ+cSdcxI4M/CqzWyVTsGnLv15KNEg5gCjavFEDmsGoVi3n3ENau7fUj5iSgvwMWdBeskPfy75Xgav3larPy7FtlMN3b++TKVVQz0Z+CrHFgnhynmWOFBNytVibInvmMqX7agLVz2gI2IMsqO84p+KDzyyVbq3S9Ll4F4V50moy6LAhBKjCYa8o1pg2lMlfQbGboqDwmrz6613q2kG3jbOzhX4ta5kg9XofU58ECgYEA4VgN9/ZQkUX/dRrB1iG+mvNEYPSwfeHb1UbD6KmsD99SgSoklzXb0l/UBBEOon5ytwdx/yPiiuenBAKNxr8YKKTiYKdpCyBJ70Q+HQQWNNAIjYKscxTYhah1KzHhEBlHQ9SBhhwMHtoH34mtFy/SZCcS+irWAdPTLCWmF9xkOXsCgYEAx8BUZDs1BLYd3WSr+QrvpNXaymQep2KeOraWXVxgF8mGOucKSh4+jgBoEgzAK2y6CtvDz/wizNmOsClIVqTlqxnTe7zMKNEXZujRj3d2SUXmmqKWxHA/VUGZ5//a3VL5DZTOojKDoQiy3yRJW5hG59i6bpkrciQez/ZUqOh6duECgYEAhc5mhP2iu5CH7v5TaRYiexnGWZgSEL2DbrIVdFsDy2z9LatbjNozTEkQuNV0DjLtZRcrrqedRoPlXXEyxHgGHWRC88eUjUHABS5Nf6dElFmPKpAUXEVdiIgOAvccQBXyhilyO7L903f9wtOajzEbSdMV5qx25SDlvMoiRPreHG8CgYApP1jt3aAEGgsutWQhqBV2R0bHtkbyL5YW7687FiEtqEqUjTL9vSMTtZfH6mQgU3JTXbAgmaMiA+bID65FXgWjAFFAYusRnqOjd34WjweY99s3oU1awQcC9unuE1JBk6mkGU9WBPJTZXVySI7xYA98Pq+4uN5U0oqeTPKMcn0fYQKBgQC37sT3AzIJArmRvkx9UFvPf+50MjWXieEA+qKsCdUppNFE32JrUNx0h7/ft1e75PLQ7w2AVidMec6SbuI9KGfFTFL5q8u/4AJb7jSuUNurn88B8aUw6Xv4YFILgFNMh574a051YtrEBt7rqmId8DADIslQFzWxX1lVVcyS3+DMZA==" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIIClTCCAX0CBgGAs7wTfzANBgkqhkiG9w0BAQsFADAOMQwwCgYDVQQDDANob2UwHhcNMjIwNTExMTUyNjI5WhcNMzIwNTExMTUyODA5WjAOMQwwCgYDVQQDDANob2UwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCv1L8vWYolob5tkE12ul1zJxWGwVmPkE3I1NBToJ20dzeQynpam4/UZX+z73ig6Xg4ErfyHMHzdBmnO+PcEmPtRzl2Aro6w0LPllrfMYnlK6jGI0E3U+8R6V9gCWwBZMjDWOe+GR3ann7i+hZ7c1Pb1P8eJnSAxRHB4dEbGXF0L16PkK5IQBqLoM/Lyb5Ijo3vd8V/e936TLrZoMvgLdVe+lUhHiuI5pQC+Np00KuNcz9wH7/fEBCPUG1Hrm5lgLteaspJQ2vPTGLxRtNi10b+pq9lWflsvePBzoVBAD2hz9Gt6/ugu1YS35qyVPuydww+DW5DqNValyST6yHDMzcbAgMBAAEwDQYJKoZIhvcNAQELBQADggEBADFj/Idi4/6nv/wWNkbeyFQ2qI1/HHj5Vn62QwTaiwSuNphjziucd5h7i+1bNqm3PITSe5V/qkqGsLfFW9ShKO/BYCwd1opCN+qpdxr//cAxzzfLD5qSyfZNitLtjTZQBzKJYRGcB69dIvj1UMUGxECWJ/ijl0BJ3p5q5rxSSP/qCPr+FvlZEZne5k921/f892mJGyob0u8KIMbIEiyrXMQnOBFoG/krtoxAcvv+pq2tZpYaIrtjNhsWY7DGhHueFyKYlYlBUKjPaxERT/ptUVSd2SewpFgoTrxeMLIxLoyeUre4lAq1HaQ6sGcPZB2TKraEYpVlQpPg3uze/FbjEco=" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "b4df1d4a-eee6-40c5-9052-f8bce16dc01d",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEogIBAAKCAQEAg0h6e48hkR+Nt2R6p60xBXW/UrK/JLJTOBGR++bo/eXxZwvW7Y5L5Lr4gJ/dfvRYFQDF92a++Y7XBMLJ0E3qHX1lLfr61Ew1HQV+ycq0dG+ifOR0SxLCCsvzCt8NxUqbezcWfkhUMMzW5Jxq07VgYqfqgqcPwDGMRJ8jAbQ2+dYnnWhWSK8BBBzVqZ9PmYKaHSNVy+IV/f+hzQCaYJU7fGZoCLGsANE/gPpoL4MkWAJwVYkS8Nfcf8QbVmk0w85uAwPAnasM/JjhhYOrtpPKYIC7x9AS0FqF51Ew6ncFqgNJrOq9iE0XnYszsJ/FwD4dXgm8vlvluNl4dPQKnAuwOwIDAQABAoIBAHtvxloutezxshnhC8JkgVcU4xMqpbYnRT/OpWgoMKGpdlThOPCbfphNhCHMLkKUE82LsJdxr9aNi3YagA6vc5TOtjeJaBX8oWPsKs4pHYrs++ZaF04PEQt9v8NU/mmmQJKVtTx/XUmVD+hbecYdH8cjAshds92NuMk8p3mOrLIyX69Zlpnm42nqag4lf22fbclYnf4WJznf9EPyCLTsJjlubRYlFm5p+IMQrqxBZCHmnLoSOnedAdAfas9Z4YCuJjQgMj3yv6MJwzNjz+4ekZMMY8+ytbpOmUCTbcABuWpjICjNRlDaaBZ1P2XTT7+TvpYsrw1GxzSZpUR/pmp/dYECgYEA2af7q/NGEh+yvouAID6jmtHUNF7LptcEvQaG3OaBYgPE+mXnznLlAGLx1yLg1j5zAFlPRd/MkfqBAcNiQvwszDVHTWcPkRM3T4Kfu3CgS1dyJDrZe6o+X+QbBhmheXs1qOgYbaN7Y77zyTaqfDYyCEpTYkf7wwWWiGAMUJn8EbECgYEAmmkuFy77oZlCo6uTcBXthhiUvvyREcaVIgNSL8eYzAELfYl0JcL3PEm3mLkUGniBCQz25RJoseE0TDbk6EOA1TGRJn7suQZwrvR8mBtZUN0pJvrlt529z16sk8s8cLI7i51MSq79kfcY8gQ5oWczjsMzg9EAnQccve+xlvfqj6sCgYAVZQe+DTm0Cl2dkUTU5pNaYonDZBYMnlIe6odTK21IXyp7mozApFaSRSeUiB8lsBnJzP2X1rnbF46ax8Pe5b7Zi9soZpsHHaZwMFzXJej7vuq/WPGL0F41OszVOqu+rzfFFJtiG5HDaj+4ZaE4eHNOkU/E92Jt9xym5xoOyjQW4QKBgCIP27v/gEDIpzulqLOMEsaG+6EZ5AKQ1OsY4nNpy1oNTPSXcsi1toZVGKwW/8lLFePiOUCVDAVZUYkSfvKBmZTuBz//tcanFgpyIl4Hgm9lKiPQKwaTRIDPOLCtn5qYpqwIugCrk4I0iQsyRWhGdMgkZWPJoiIBpKR9kKZl8BdbAoGAFaftne+kYF0ztOAxmHIN18X4oR4bCzYgzGugcKAF9v4Liw0w6Nuas6Bdk1p2QKgn5lJ7PHa8NSGGp4gtOwoq232fJA4rpr91za78b16b64Lsf66KVSQOtqgtMYbJ3IDBCW+OSmy0c5I+4SU2AswUATha8+R0NUNSvzdsI9uljFU=" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIIClTCCAX0CBgGAs7wSljANBgkqhkiG9w0BAQsFADAOMQwwCgYDVQQDDANob2UwHhcNMjIwNTExMTUyNjI4WhcNMzIwNTExMTUyODA4WjAOMQwwCgYDVQQDDANob2UwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCDSHp7jyGRH423ZHqnrTEFdb9Ssr8kslM4EZH75uj95fFnC9btjkvkuviAn91+9FgVAMX3Zr75jtcEwsnQTeodfWUt+vrUTDUdBX7JyrR0b6J85HRLEsIKy/MK3w3FSpt7NxZ+SFQwzNbknGrTtWBip+qCpw/AMYxEnyMBtDb51iedaFZIrwEEHNWpn0+ZgpodI1XL4hX9/6HNAJpglTt8ZmgIsawA0T+A+mgvgyRYAnBViRLw19x/xBtWaTTDzm4DA8Cdqwz8mOGFg6u2k8pggLvH0BLQWoXnUTDqdwWqA0ms6r2ITRedizOwn8XAPh1eCby+W+W42Xh09AqcC7A7AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAED8rlPTLQXRK6zuiYvxHOAWQRzzy2BEQ2yMfl+kN+tfdroamPV7E5d5zUCe8Ze5aLL4WGh70slw91Gppw622+UUvEmmKNYfjd/13jh4sQGfofQ0BS5DAVAsww98gxJLYWovi/K6an19IxqE037j8r/yj0MsrIbPuTkeuOXa4FftkCDJQaD9zJL9bfjidASXoFJjlyDvGt8a0dt4A9HT/IMK/VhwnscK4H4h4RoRSutez4QMpKljytuNNEETxz82Ww+rjlt+xMCnR+4aoSyqPewaOXEa0/mig4JjGeAuW0CMkjOzQxutzx+d/D9a/vGbOvBDKb4ZGo86L6yBp8r6pTo=" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "f850dc4c-76cc-4991-a849-88435ef5944d",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "9df09873-b215-4f41-b1ea-d177586b7ba1" ],
        "secret" : [ "l_Xx9sfUxVsqKmzn--S2EtqoNoImvBn_O67EzSt_YlKPQOPP0p91cu5mo3N3B6-nTFBipDu6Yrj0ew6SPPu3UQ" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    }, {
      "id" : "900f6d9b-85e6-423c-a099-e320f58b7b88",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "ff4ce276-c8c2-43eb-894e-183cb79e7dc8" ],
        "secret" : [ "MNr8G12DnSU13T6YbtqWrQ" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "41b5b4aa-9706-49ca-9438-06ebd0c04ed4",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f14695ae-a1ab-4a81-a167-0e092d446662",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "cf1827f1-8237-43d6-8809-c609f35ad24c",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d9dff827-4700-4b54-a7c7-537b08fce69d",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f68bac9c-31a4-476e-922c-e9c23be30d05",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9e02805a-1cf9-4c67-89a5-b30e60589077",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2c55d679-8edb-421f-94f3-539113c1ada4",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c4398776-c82b-4df9-8933-eca028a4612b",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "bf71bfbf-3060-443c-a0eb-dec3faa0394f",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "92f37975-0a99-4620-8f88-a5012431307f",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "92a245f1-09cf-4605-afa9-27791632786f",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0aa2d4b2-6038-4ddd-ade1-aa60fb07ed9c",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ded377bb-ca7a-4e09-830b-3c0ad8b4e886",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "159cf987-61db-4b57-a217-dcac83e07790",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3a5dbd2f-e977-48ad-8787-d50ef4875cf2",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "bc097d1b-155e-440b-a40c-215e7c59e655",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c333106d-1eae-48e9-bab1-ab5988874307",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ba8a9949-f074-4c8a-8124-6f8831e55c98",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8af7236b-0878-41c5-9052-fe234067881a",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b5cf6901-13ec-4e66-82d8-4d73d3fc1f2b",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "f3cab066-a7c7-4331-aafa-87f746beb35c",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "1963516e-f23a-44cb-af75-835ea6b419d6",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "terms_and_conditions",
    "name" : "Terms and Conditions",
    "providerId" : "terms_and_conditions",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "parRequestUriLifespan" : "60",
    "cibaInterval" : "5"
  },
  "keycloakVersion" : "18.0.0",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}